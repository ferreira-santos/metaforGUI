cat("\n", paste("- metafor package version", packageVersion("metafor"))," (http://www.metafor-project.org/):\n", sep="", file="metaforGUI_Output.txt", append=T)
capture.output(print(citation("metafor"), style="textVersion"), file="metaforGUI_Output.txt", append=T)
cat("\n", paste("- metaforGUI package version", packageVersion("metaforGUI")), ":\n", sep="", file="metaforGUI_Output.txt", append=T)
capture.output(print(citation("metaforGUI"), style="textVersion"), file="metaforGUI_Output.txt", append=T)
cat("\n\n********** [metaforGUI] End of Output ***********", file="metaforGUI_Output.txt", append=T)
gmessage(paste("Meta-analysis appears to have run successfully!\n\nPlease find the output file(s) in the defined output directory:\n",getwd()), title="Meta-analysis successful")
cat("\n*metaforGUI* message:\n    Meta-analysis appears to have run successfully!\n    Please find the output file(s) in the defined output directory:\n     ", getwd() ,"\n\n")
#IDEA: Run the output file on Windows - code below:
#shell.exec(paste0(getwd(),"/metaforGUI_Output.txt"))
#Maybe in the dialog box, as user "Open output file? Yes/No"
} #End-of-check if ES and Var variables are assigned-If_clause
}) #End-of-btnRunMA_handler_function
dev.off()
?with
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
?.GlobalEnv
library(metaforGUI)
metaforGUI()
get("study")
with(data,get("study"))
within(data,get("study"))
library(metaforGUI)
metaforGUI()
eval("data")
data
eval(data)
eval(data$study)
library(metaforGUI)
metaforGUI()
data
library(metaforGUI)
metaforGUI()
data
dataset
library(metaforGUI)
metaforGUI()
dataset<-data
rm(data)
print(dataset)
dataset
dataset["d"]
print(dataset["d"])
dataset$d
library(metaforGUI)
metaforGUI()
print(dataset$d)
print( with(data=data,get(svalue(labelStudies))) )
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
install.packages(devtools)
install.packages("devtools")
library(RGtk2)
?choose.files
library(metaforGUI)
library(metaforGUI)
library(grDevices)
?guiToolkit
metaforGUI()
?choose.files
Filters
Filters["All"]
Filters[All]
Filters[c("All")]
Filters[c("All")]
metaforGUI()
choose.dir(caption = "Select folder")
!is.NA(choose.dir(caption = "Select folder"))
!is.na(choose.dir(caption = "Select folder"))
!is.na(choose.dir(caption = "Select folder"))
!is.na(choose.dir(caption = "Select folder"))
!is.na(choose.dir(caption = "Select Output Folder where results will be written"))
d <- choose.dir(caption = "Select Output Folder where the results of the meta-analysis will be written")
sw <- as.numeric(system("wmic desktopmonitor get screenwidth" , intern=TRUE))[-c(1, length(as.numeric(system("wmic desktopmonitor get screenwidth" , intern=TRUE))))][2]
sh <- as.numeric(system("wmic desktopmonitor get screenheight", intern=TRUE))[-c(1, length(as.numeric(system("wmic desktopmonitor get screenheight", intern=TRUE))))][2]
as.numeric(system("wmic desktopmonitor get screenwidth" , intern=TRUE))
system("wmic desktopmonitor get screenwidth" , intern=TRUE)
(system("wmic desktopmonitor get screenwidth" , intern=TRUE))[-c(1, length((system("wmic desktopmonitor get screenwidth" , intern=TRUE))))][2]
system("wmic desktopmonitor get screenwidth" , intern=TRUE)[-c(1, length((system("wmic desktopmonitor get screenwidth" , intern=TRUE))))][2]
system("wmic desktopmonitor get screenwidth" , intern=TRUE)[-c(1, length(system("wmic desktopmonitor get screenwidth" , intern=TRUE)))
]
as.numeric(system("wmic desktopmonitor get screenwidth" , intern=TRUE)[-c(1, length(system("wmic desktopmonitor get screenwidth" , intern=TRUE))))
system("wmic desktopmonitor get screenwidth" , intern=TRUE)[-c(1, length(system("wmic desktopmonitor get screenwidth" , intern=TRUE)))]
as.numeric(system("wmic desktopmonitor get screenwidth" , intern=TRUE)[-c(1, length(system("wmic desktopmonitor get screenwidth" , intern=TRUE)))])
sw <- as.numeric(system("wmic desktopmonitor get screenwidth" , intern=TRUE)[-c(1, length(system("wmic desktopmonitor get screenwidth" , intern=TRUE)))])
sh <- as.numeric(system("wmic desktopmonitor get screenheight" , intern=TRUE)[-c(1, length(system("wmic desktopmonitor get screenheight" , intern=TRUE)))])
sw
sh
sw <- as.numeric(system("wmic desktopmonitor get screenwidth")[-c(1, length(system("wmic desktopmonitor get screenwidth")))])
version(metaforGUI)
version("metaforGUI"")
version("metaforGUI")
ver("metaforGUI")
packageDescription("metaforGUI")$Version
paste("metaforGUI (version ",packageDescription("metaforGUI")$Version,"; FFS)")
paste0("metaforGUI (version ",packageDescription("metaforGUI")$Version,"; FFS)")
library(metaforGUI)
metaforGUI()
browseURL("https://github.com/ferreira-santos/metaforGUI")
choose.files(caption="Select DataSet file in Comma-Separated Value (CSV) format")
choose.files(caption="Select DataSet file in Comma-Separated Value (CSV) format", multi=F)
choose.files(caption="Select DataSet file in Comma-Separated Value (CSV) format", multi=F)
f<-choose.files(caption="Select DataSet file in Comma-Separated Value (CSV) format", multi=F)
f
length(f)
?matrix
Filters
Filters["All"]
Filters$All
Filters.All
x <- Filters
x
x[All,1]
x[1]
x[2]
x[9]
x[11]
x[13]
x[14]
x[1,2]
x[1,2,3]
x[1,10]
x[1,12]
x[1,3]
matrix( c("CSV","All","*.csv","*.*") )
matrix( c("CSV","All","*.csv","*.*"), ncols=2 )
matrix( c("CSV","All","*.csv","*.*"), ncol=2 )
matrix( c("CSV files (*.csv)","All files (*.*)","*.csv","*.*"), ncol=2 )
choose.files(caption="Select DataSet file in Comma-Separated Value (CSV) format", multi=F, filters=matrix(c("CSV files (*.csv)","All files (*.*)","*.csv","*.*"), ncol=2))
?choose.files
choose.files(caption="Select DataSet file in Comma-Separated Value (CSV) format", multi=F,
filters=matrix(c("CSV files (*.csv)","All files (*.*)","*.csv","*.*"), ncol=2), index=0
)
choose.files(caption="Select DataSet file in Comma-Separated Value (CSV) format", multi=F,
filters=matrix(c("CSV files (*.csv)","All files (*.*)","*.csv","*.*"), ncol=2), index=1
)
choose.files(caption="Select DataSet file in Comma-Separated Value (CSV) format", multi=F,
filters=matrix(c("CSV files (*.csv)","All files (*.*)","*.csv","*.*"), ncol=2), index=2
)
citation(metaforGUI)
citation("metaforGUI")
x<-citation(metaforGUI)
x<-citation("metaforGUI")
x
names(x)
x(1)
x[1]
x[1,1]
x[[1]]
x$title
library(metaforGUI)
metaforGUI()
?choose.dir
library(metaforGUI)
metaforGUI()
setwd("C:/Users/F. Ferreira-Santos/Dropbox/GitHub/metaforGUI")
metaforGUI()
metaforGUI()
metaforGUI()
metaforGUI()
metaforGUI()
metaforGUI()
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
dev.off()
library(metaforGUI)
library(metaforGUI
metaforGUI()
rm(list=ls())
x<-c(1,2,3,4)
var<-c(0.2,0.4,0.9,0.3)
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
setwd("C:/Users/F. Ferreira-Santos/Dropbox/GitHub/metaforGUI")
metaforGUI()
ls()
library(metaforGUI)
metaforGUI()
?tag
tag()
tag
library(metaforGUI)
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
metaforGUI()
library(metaforGUI)
library(metaforGUI)
library(metaforGUI)
metaforGUI()
dataset<-data
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
dataset$d
dataset[dataset$d]
dataset[d]
dataset["d"]
dataset[["d"]]
metaforGUI()
library(metaforGUI)
metaforGUI()
dataset$d
names(dataset$d)
summary(dataset$d)
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
?gvarbrowser
metaforGUI()
class(1)
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
d<-789
strsplit("dataset$d", "$")
strsplit("dataset$d", "t")
strsplit("dataset$d", "$")
strsplit("dataset$d", "t$")
strsplit("dataset$d", "a")
strsplit("dataset$d", "\$")
strsplit("dataset$d", "\\$")
strsplit("d", "\\$")
strsplit("d", "\\$")[[1]]
strsplit("da$d", "\\$")[[1]]
strsplit(string, "\\$")[[1]]
data$d
datasets$d
dataset$d
dataset$d = dataset$d + 1
dataset$d
dataset$d = dataset$d + 9
library(metaforGUI)
dev.off()
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
eval("x")
eval("obj(x)")
eval(x
)
x
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
?with
metaforGUI()
library(metaforGUI)
metaforGUI()
?get
with?
?with
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
x
x <- c(x,5)
x
var
var <- c(var,0.23)
var
library(metaforGUI)
x2 <- x[1:4]
x2
var2 <- var[1:4]
var2
metaforGUI()
x
library(metaforGUI)
library(metaforGUI)
metaforGUI()
library(metaforGUI)
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
strsplit("dataset$d", "\\$")
strsplit("dataset$d", "\\$")[[1]][1]
strsplit("dataset$d", "\\$")[[1]][2]
d
with(dataset, d)
with(dataset, get(d)
)
with(dataset, get("d"))
rm(d)
dataset$d
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
x2<-x2[1:3]
var2<-var2[1:3]
var2<-var2[1:2]
x2<-x2[1:2]
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
dataset$study_names
length(dataset$study_names)
View(dataset)
View(dataset)
library(metaforGUI)
View(dataset)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
?ghtml
ghtml("https://github.com/ferreira-santos/metaforGUI#metaforgui", container=g2frame)
glabel("https://github.com/ferreira-santos/metaforGUI#metaforgui", container=g2frame)
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
?gtext
library(metaforGUI)
metaforGUI()
library(metaforGUI)
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
gtext
widget
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
style
library(metaforGUI)
metaforGUI()
?font.attr
??font.attr
metaforGUI()
library(metaforGUI)
library(metaforGUI)
metaforGUI()
gtextobj[['tags']]
?gtextRGtk2
library(metaforGUI)
metaforGUI()
insert
winn<-gwindow()
t <- gtext("Some text", container=winn)
t["tags"]
t[["tags"]]
svalue(t)
get(svalue(t))
svalue(t)
names(svalue(t))
names(t)
methods(t)
insert(t, "\nMore text")
insert(t, "\nMore text", font.attr=())
insert(t, "\nMore text", font.attr=() )
insert(t, "\nMore text", font.attr=c() )
insert(t, "\nMore text", font.attr=c(style="heading") )
insert(t, "\nMore text", font.attr=c(style="italic") )
insert(t, "\nMore text", font.attr=c(style="under") )
insert(t, "\nMore text", font.attr=c(style="underined") )
insert(t, "\nMore text", font.attr=c(style="underlined") )
insert(t, "\nMore text", font.attr=c(style="bold") )
insert(t, "\nMore text", font.attr=c(style="emphasis") )
obj[['tags']]
t[['tags']]
t[[1]]
t[1]
properties(t)
class(t)
insert(t, "\nMore text", font.attr=c(underline=T) )
insert(t, "\nMore text", font.attr=c(underline=TRUE) )
insert(t, "\nMore text", font.attr=c(underline=1) )
insert(t, "\nMore text", font.attr=c(underlined=1) )
insert(t, "\nMore text", font.attr=c(underline="single") )
insert(t, "More text", font.attr=c(style="normal", underline="single"))
insert(t, "More text", font.attr=c(style="link", underline="single"))
insert(t, "More text", font.attr=c(style="link"))
library(metaforGUI)
metaforGUI()
citation("metaforGUI")
