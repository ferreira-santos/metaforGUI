var <- c(var,0.23)
var
library(metaforGUI)
x2 <- x[1:4]
x2
var2 <- var[1:4]
var2
metaforGUI()
x
library(metaforGUI)
library(metaforGUI)
metaforGUI()
library(metaforGUI)
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
strsplit("dataset$d", "\\$")
strsplit("dataset$d", "\\$")[[1]][1]
strsplit("dataset$d", "\\$")[[1]][2]
d
with(dataset, d)
with(dataset, get(d)
)
with(dataset, get("d"))
rm(d)
dataset$d
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
x2<-x2[1:3]
var2<-var2[1:3]
var2<-var2[1:2]
x2<-x2[1:2]
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
dataset$study_names
length(dataset$study_names)
View(dataset)
View(dataset)
library(metaforGUI)
View(dataset)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
?ghtml
ghtml("https://github.com/ferreira-santos/metaforGUI#metaforgui", container=g2frame)
glabel("https://github.com/ferreira-santos/metaforGUI#metaforgui", container=g2frame)
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
?gtext
library(metaforGUI)
metaforGUI()
library(metaforGUI)
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
gtext
widget
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
style
library(metaforGUI)
metaforGUI()
?font.attr
??font.attr
metaforGUI()
library(metaforGUI)
library(metaforGUI)
metaforGUI()
gtextobj[['tags']]
?gtextRGtk2
library(metaforGUI)
metaforGUI()
insert
winn<-gwindow()
t <- gtext("Some text", container=winn)
t["tags"]
t[["tags"]]
svalue(t)
get(svalue(t))
svalue(t)
names(svalue(t))
names(t)
methods(t)
insert(t, "\nMore text")
insert(t, "\nMore text", font.attr=())
insert(t, "\nMore text", font.attr=() )
insert(t, "\nMore text", font.attr=c() )
insert(t, "\nMore text", font.attr=c(style="heading") )
insert(t, "\nMore text", font.attr=c(style="italic") )
insert(t, "\nMore text", font.attr=c(style="under") )
insert(t, "\nMore text", font.attr=c(style="underined") )
insert(t, "\nMore text", font.attr=c(style="underlined") )
insert(t, "\nMore text", font.attr=c(style="bold") )
insert(t, "\nMore text", font.attr=c(style="emphasis") )
obj[['tags']]
t[['tags']]
t[[1]]
t[1]
properties(t)
class(t)
insert(t, "\nMore text", font.attr=c(underline=T) )
insert(t, "\nMore text", font.attr=c(underline=TRUE) )
insert(t, "\nMore text", font.attr=c(underline=1) )
insert(t, "\nMore text", font.attr=c(underlined=1) )
insert(t, "\nMore text", font.attr=c(underline="single") )
insert(t, "More text", font.attr=c(style="normal", underline="single"))
insert(t, "More text", font.attr=c(style="link", underline="single"))
insert(t, "More text", font.attr=c(style="link"))
library(metaforGUI)
metaforGUI()
citation("metaforGUI")
?try
?catch
x=y
try(x=y)
try(x=y,T)
try("x=y",T)
try(x<-y,T)
try(x<-y,F)
Sys.localeconv()
?Sys.localeconv()
Sys.getlocale()
Sys.setlocale("LC_NUMERIC", "de_AT")
Sys.localeconv()
Sys.getlocale()
Sys.localeconv()
read.csv(file.choose())
read.csv2(file.choose())
read.csv2(file.choose())
read.csv(file.choose())
read.csv(file.choose(new=T))
read.csv2(file.choose(new=T))
Sys.localeconv()["decimal_point"]=="."
Sys.localeconv()
Sys.getlocale()
?fread
install.packages("data.tables")
install.packages("data.table")
library(data.table)
browseVignettes("data.table")
fread
a <- fread( file.choose(new=T) )
a
View(a)
read.csv2()
b <- read.csv2( file.choose(new=T) )
View(b)
b
?tryCatch
?try
try(dataset<-read.csv("C:/Users/F. Ferreira-Santos/Desktop/Book1.csv"))
View(dataset)
View(dataset)
(dataset<-read.csv("C:/Users/F. Ferreira-Santos/Desktop/Book1.csv"))
try(dataset<-read.csv("C:/Users/F. Ferreira-Santos/Desktop/Book1.csv"))
try(dataset<-read.csv("C:/Users/F. Ferreira-Santos/Desktop/Book1.csv"), TRUE)
View(dataset)
try(dataset<-read.csv("C:/Users/F. Ferreira-Santos/Desktop/Book1.csv"), TRUE)
try(dataset<-read.csv("C:/Users/F. Ferreira-Santos/Desktop/Book1.csv"), TRUE)
try(dataset<-read.csv2("C:/Users/F. Ferreira-Santos/Desktop/Book1.csv"), TRUE)
try(dataset<-read.csv2("C:/Users/F. Ferreira-Santos/Desktop/Book1.csv"), TRUE)
try(dataset<-read.csv("C:/Users/F. Ferreira-Santos/Desktop/Book1.csv"), TRUE)
View(dataset)
try(dataset<-read.csv("C:/Users/F. Ferreira-Santos/Desktop/Book2.csv"), TRUE)
Sys.localeconv()
Sys.getlocale()
Sys.getlocale()
trycatch
library(metaforGUI)
metaforGUI()
Sys.localeconv()
Sys.localeconv
Sys.localeconv()
Sys.localeconv()
Sys.localeconv()
Sys.localeconv()
Sys.localeconv
Sys.localeconv()
Sys.getlocale()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
library(metaforGUI)
metaforGUI(csv.dec=",", csv.sep=";")
library(metaforGUI)
read.csv2( file.choose(n=T) )
read.csv2( file.choose(n=T) )
read.csv( file.choose(n=T) )
dataset = read.csv2( file.choose(n=T) )
dataset = read.csv2( file.choose(new=T) )
dataset <- read.csv2( file.choose(new=T) )
dataset <- read.csv2( file.choose(new=T) )
dataset
dataset <- read.csv2( file.choose(new=T) )
dfd
))
Sys.localeconv()
?tryCatch
tryCatch(1, finally = print("Hello"))
tryCatch(x <- y, error = function(e) {print(e)} )
tryCatch(x <- y, error = function(e) { assign("error"", e, envir=.GlobalEnv) } )
tryCatch(x <- y, error = function(e) { assign("error", e, envir=.GlobalEnv) } )
tryCatch(x <- y, error = function(e) { assign("error", e$message, envir=.GlobalEnv) } )
tryCatch(x <- y, error = function(e) { assign("error", e$message, envir=.GlobalEnv) }, finally=("no error") )
tryCatch(x <- 1, error = function(e) { assign("error", e$message, envir=.GlobalEnv) }, finally=("no error") )
tryCatch(x <- 1, error = function(e) { assign("error", e$message, envir=.GlobalEnv) }, finally=(print("no error") )
)
tryCatch( x <- y, error = function(e) { assign("error", e$message, envir=.GlobalEnv) }, finally=(print("no error")) )
tryCatch( x <- y, error = function(e) { assign("error", e$message, envir=.GlobalEnv) }, finally=(print("no error")) )
assing("dataset"", y, envir=.GlobalEnv)
assing("dataset", y, envir=.GlobalEnv)
assign("dataset", y, envir=.GlobalEnv)
try(assign("dataset", y, envir=.GlobalEnv))
try(assign("dataset", y, envir=.GlobalEnv), T)
class(error)
Sys.localeconb()
Sys.localeconv()
old <- Sys.getlocale()
## The category may not be set:
## the following may do so, but it might not be supported.
Sys.setlocale("LC_MONETARY", locale = "")
Sys.localeconv()
## or set an appropriate value yourself, e.g.
Sys.setlocale("LC_MONETARY", "de_AT")
Sys.localeconv()
Sys.setlocale(locale = old)
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
?metaforGUI
metaforGUI()
library(metaforGUI)
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
tryCatch(
dataset <<- read.csv(tag(win, "f"), dec=".", sep=","),
error = function(e) {
gmessage(icon="error", paste0("An error occurred while trying to load the CSV dataset file. CSV files may differ depending on regional/locale settings: if the decimal mark is a dot ( . ) then CSV files use commas ( , ) to separate values, but if the decimal mark is a comma ( , ) then CSV files use semicolons ( ; ) to separate values.\n\nmetaforGUI attempted to determine these values automatically and considered:\ndecimal mark = ",csv.dec,"\nseparator = ",csv.sep,"\n\nYou may open your CSV file in a text editor to check what is the actual decimal mark and separator being used in that file. Then you may define these values manually by restarting metaforGUI defining the function arguments csv.dec and csv.sep, for example by typing:\nmetaforGUI(csv.dec=\",\", csv.sep=\";\")\n\nPlease see package documentation for further details.\n\nFor reference and bug reporting, the R error message was the following:\n\"",e$message,"\""), title="Error loading file")
assign("error", e$message, envir=.GlobalEnv)
}
)
csv.sep=","
csv.dec="."
tryCatch(
tag(win,"dataset") <<- read.csv(tag(win, "f"), dec=csv.dec, sep=csv.sep),
error = function(e) {
gmessage(icon="error", paste0("An error occurred while trying to load the CSV dataset file. CSV files may differ depending on regional/locale settings: if the decimal mark is a dot ( . ) then CSV files use commas ( , ) to separate values, but if the decimal mark is a comma ( , ) then CSV files use semicolons ( ; ) to separate values.\n\nmetaforGUI attempted to determine these values automatically and considered:\ndecimal mark = ",csv.dec,"\nseparator = ",csv.sep,"\n\nYou may open your CSV file in a text editor to check what is the actual decimal mark and separator being used in that file. Then you may define these values manually by restarting metaforGUI defining the function arguments csv.dec and csv.sep, for example by typing:\nmetaforGUI(csv.dec=\",\", csv.sep=\";\")\n\nPlease see package documentation for further details.\n\nFor reference and bug reporting, the R error message was the following:\n\"",e$message,"\""), title="Error loading file")
assign("error", e$message, envir=.GlobalEnv)
}
)
tryCatch(
dataset <<- read.csv( file.choose() ), dec=csv.dec, sep=csv.sep),
error = function(e) {
gmessage(icon="error", paste0("An error occurred while trying to load the CSV dataset file. CSV files may differ depending on regional/locale settings: if the decimal mark is a dot ( . ) then CSV files use commas ( , ) to separate values, but if the decimal mark is a comma ( , ) then CSV files use semicolons ( ; ) to separate values.\n\nmetaforGUI attempted to determine these values automatically and considered:\ndecimal mark = ",csv.dec,"\nseparator = ",csv.sep,"\n\nYou may open your CSV file in a text editor to check what is the actual decimal mark and separator being used in that file. Then you may define these values manually by restarting metaforGUI defining the function arguments csv.dec and csv.sep, for example by typing:\nmetaforGUI(csv.dec=\",\", csv.sep=\";\")\n\nPlease see package documentation for further details.\n\nFor reference and bug reporting, the R error message was the following:\n\"",e$message,"\""), title="Error loading file")
assign("error", e$message, envir=.GlobalEnv)
}
)
tryCatch(
dataset <<- read.csv( file.choose() , dec=csv.dec, sep=csv.sep),
error = function(e) {
gmessage(icon="error", paste0("An error occurred while trying to load the CSV dataset file. CSV files may differ depending on regional/locale settings: if the decimal mark is a dot ( . ) then CSV files use commas ( , ) to separate values, but if the decimal mark is a comma ( , ) then CSV files use semicolons ( ; ) to separate values.\n\nmetaforGUI attempted to determine these values automatically and considered:\ndecimal mark = ",csv.dec,"\nseparator = ",csv.sep,"\n\nYou may open your CSV file in a text editor to check what is the actual decimal mark and separator being used in that file. Then you may define these values manually by restarting metaforGUI defining the function arguments csv.dec and csv.sep, for example by typing:\nmetaforGUI(csv.dec=\",\", csv.sep=\";\")\n\nPlease see package documentation for further details.\n\nFor reference and bug reporting, the R error message was the following:\n\"",e$message,"\""), title="Error loading file")
assign("error", e$message, envir=.GlobalEnv)
}
)
library(metaforGUI)
metaforGUI()
metaforGUI()
library(metaforGUI)
metaforGUI()
dataset
dataset
library(metaforGUI)
dataset
cat("\n*metaforGUI* message:\n    One of the following problems was detected with the data entered.\n\n1) Meta-analysis cannot be computed with less than 3 effect sizes/studies (the current dataset only contains", length(tag(win,"arg_yi")),"data points).\n\n2) The number of effect sizes, variances/SEs, and/or study labels do not match. Please ensure that all variables have the same number of data points.\n\nOutputs will not be produced.\n\n")
arg_yi <- 1
cat(paste("\n*metaforGUI* message:\n    One of the following problems was detected with the data entered.\n\n1) Meta-analysis cannot be computed with less than 3 effect sizes/studies (the current dataset only contains", length(tag(win,"arg_yi")),"data points).\n\n2) The number of effect sizes, variances/SEs, and/or study labels do not match. Please ensure that all variables have the same number of data points.\n\nOutputs will not be produced.\n\n"))
tag(win,"arg_yi")<-1
win = gwindow(paste0("metaforGUI (version ",packageDescription("metaforGUI")$Version,"; FFS)"), width=start_width, height=start_height)
sw <- as.numeric(system("wmic desktopmonitor get screenwidth", intern=TRUE)[-c(1, length(system("wmic desktopmonitor get screenwidth", intern=TRUE)))])
sh <- as.numeric(system("wmic desktopmonitor get screenheight", intern=TRUE)[-c(1, length(system("wmic desktopmonitor get screenheight", intern=TRUE)))])
#print(c("Screen Size:",as.character(sw), as.character(sh)))
start_width <- sw/2
start_height <- sh/2
win = gwindow(paste0("metaforGUI (version ",packageDescription("metaforGUI")$Version,"; FFS)"), width=start_width, height=start_height)
tag(win,"arg_yi")<-1
cat(paste("\n*metaforGUI* message:\n    One of the following problems was detected with the data entered.\n\n1) Meta-analysis cannot be computed with less than 3 effect sizes/studies (the current dataset only contains", length(tag(win,"arg_yi")),"data points).\n\n2) The number of effect sizes, variances/SEs, and/or study labels do not match. Please ensure that all variables have the same number of data points.\n\nOutputs will not be produced.\n\n"))
cat(paste("\n*metaforGUI* message:\n    One of the following problems was detected with the data entered.\n    1) Meta-analysis cannot be computed with less than 3 effect sizes/studies (the current dataset only contains", length(tag(win,"arg_yi")),"data points).\n    2) The number of effect sizes, variances/SEs, and/or study labels do not match. Please ensure that all variables have the same number of data points.\n    Outputs will not be produced.\n\n"))
cat(paste("\n*metaforGUI* message:\n    One of the following problems was detected with the data entered.\n      1) Meta-analysis cannot be computed with less than 3 effect sizes/studies (the current dataset only contains", length(tag(win,"arg_yi")),"data points).\n      2) The number of effect sizes, variances/SEs, and/or study labels do not match. Please ensure that all variables have the same number of data points.\n    Outputs will not be produced.\n\n"))
cat(paste("\n*metaforGUI* message:\n    The Meta-Analysis Results output cannot be disabled as metaforGUI will always produce an output text file (with extension .txt).\n\nThis option is only listed here as a reminder.\n\nNote: the output files will be overwritten everytime you run metaforGUI, so copy or move the files to save them.\n\n")
cat("\n*metaforGUI* message:\n    The Meta-Analysis Results output cannot be disabled as metaforGUI will always produce an output text file (with extension .txt).\n\nThis option is only listed here as a reminder.\n\nNote: the output files will be overwritten everytime you run metaforGUI, so copy or move the files to save them.\n\n")
cat("\n*metaforGUI* message:\n    The Meta-Analysis Results output cannot be disabled as metaforGUI will always produce an output text file (with extension .txt).\n    This option is only listed here as a reminder.\n    Note: the output files will be overwritten everytime you run metaforGUI, so copy or move the files to save them.\n\n")
cat("\n*metaforGUI* message:\n    The Meta-Analysis Results output cannot be disabled as metaforGUI will always produce an output text file (with extension .txt). This option is only listed here as a reminder.\n    Note: the output files will be overwritten everytime you run metaforGUI, so copy or move the files to save them.\n\n")
cat("\n*metaforGUI* message:\n    The Meta-Analysis Results output cannot be disabled as metaforGUI will always produce an output text file (with extension .txt).\n    This option is only listed here as a reminder.\n    Note: the output files will be overwritten everytime you run metaforGUI, so copy or move the files to save them.\n\n")
cat(paste0("\n*metaforGUI* message:\n    An error occurred while trying to load the CSV dataset file. CSV files may differ depending on regional/locale settings: if the decimal mark is a dot ( . ) then CSV files use commas ( , ) to separate values, but if the decimal mark is a comma ( , ) then CSV files use semicolons ( ; ) to separate values.\n\nmetaforGUI attempted to determine these values automatically and considered:\ndecimal mark = ",csv.dec,"\nseparator = ",csv.sep,"\n\nYou may open your CSV file in a text editor to check what is the actual decimal mark and separator being used in that file. Then you may define these values manually by restarting metaforGUI defining the function arguments csv.dec and csv.sep, for example by typing:\nmetaforGUI(csv.dec=\",\", csv.sep=\";\")\n\nPlease see package documentation for further details.\n\nFor reference and bug reporting, the R error message was the following:\n\"",e$message,"\"\n\n"))
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
win<-gwindow()
tag(win, "meta-analysis") <- rma(yi=dataset$Var, vidataset$Var2)
tag(win, "meta-analysis") <- rma(yi=dataset$Var, vi=dataset$Var2)
tag(win, "meta-analysis")
names(tag(win, "meta-analysis"))
save(tag(win, "meta-analysis"))
x<-tag(win, "meta-analysis")
save(x)
save(x,"temp.Rdata")
save(x,temp.Rdata)
save(x,file="temp.Rdata")
load("temp.Rdata")
load("temp.Rdata")
names(X)
x
names(x)
forest(x)
library(metaforGUI)
metaforGUI()
load("metaforGUI_MetaAnalysis.RData")
forest(meta_analysis)
cummulative(meta_analysis)
funnel(meta_analysis)
summary(meta_analysis)
predicted(meta_analysis)
(meta_analysis)
names(meta_analysis)
meta_analysis$model
meta_analysis$version
meta_analysis$call
meta_analysis$test
meta_analysis$R2
library(metaforGUI)
library(tcltk)
library(gWidgetstcltk)
install.packages("gWidgetstcltk")
library(gWidgetstcltk)
version()
ver()
metaforGUI(toolkit="tcltk")
library(metaforGUI)
library(gWidgetstcltk)
library(tcltk)
metaforGUI(toolkit="tcltk")
metaforGUI(...,toolkit="tcltk")
metaforGUI(..., toolkit="tcltk")
toolkit
metaforGUI(csv.dec=".", csv.sep=",", toolkit="tcltk")
library(metaforGUI)
metaforGUI(gui.tk = "tcltk")
metaforGUI(gui.tk = "RGtk2")
metaforGUI(gui.tk = "tcltk")
dataset
metaforGUI(gui.tk = "tcltk")
metaforGUI(gui.tk = "tcltk")
library(metaforGUI)
metaforGUI(gui.tk = "tcltk")
library(metaforGUI)
metaforGUI()
metaforGUI(gui.tk="tcltk")
library(metaforGUI)
metaforGUI()
metaforGUI(gui.tk="tcltk")
devtools::document()
library(devtools)
devtools::document()
roxygen2::roxygenise()
library(metaforGUI)
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
install.packages("excel.link")
install.packages("XLConnect")
metaforGUI
library(metaforGUI)
metaforGUI
source('C:/Users/F. Ferreira-Santos/Dropbox/GitHub/metaforGUI/R/metaforGUI.R')
library(metaforGUI)
library(metaforGUI)
metaforGUI
library(metaforGUI)
metaforGUI()
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(gWidgetstcltk)
metaforGUI()
library(metaforGUI)
metaforGUI()
library(metaforGUI)
library(gWidgetstcltk)
metaforGUI()
x<-c(1,2,3)
library(metaforGUI)
metaforGUI()
library(metaforGUI)
metaforGUI()
